name: CI

on:
  pull_request:
  push:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Lint Project
        run: |
          pnpm install --frozen-lockfile
          pnpm run lint

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "pnpm"

      - name: Build Project
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

  docker-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: ritchie-invest-admin
      REGISTRY: docker.io
      VITE_API_BASE_URL: ${{ github.ref == 'refs/heads/main' && secrets.PROD_API_BASE_URL || secrets.STAGING_API_BASE_URL }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=develop,enable=${{ github.ref == 'refs/heads/develop' }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          build-args: |
            NODE_VERSION=22.16.0
            VITE_API_BASE_URL=${{ env.VITE_API_BASE_URL }}

      - name: Image tags (pushed or built)
        run: |
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "VITE_API_BASE_URL utilis√©: $VITE_API_BASE_URL"

  deploy:
    name: Deploy to VPS
    needs: [ docker-image ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            BRANCH="${{ github.ref_name }}"
            if [ "$BRANCH" = "main" ]; then TAG=latest; ENV=prod; else TAG=develop; ENV=staging; fi
            echo "Deployment branch=$BRANCH tag=$TAG env=$ENV"
            cd "${{ secrets.INFRA_PATH }}"
            docker pull "${{ secrets.DOCKERHUB_USERNAME }}/ritchie-invest-admin:$TAG" || true
            if ./infra.sh restart "$ENV" admin; then
              echo "Restart succeeded"
            else
              echo "Restart failed, trying up:$ENV"
              ./infra.sh "up:$ENV"
            fi
            echo "Deployment finished"
